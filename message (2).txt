-- Servi√ßos do Roblox
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local StarterGui = game:GetService("StarterGui")
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Debris = game:GetService("Debris")
local SoundService = game:GetService("SoundService")
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")

-- =====================================================
-- 1. SISTEMA DE IDENTIFICA√á√ÉO DE USU√ÅRIOS
-- =====================================================

-- üö® Configura√ß√£o de Donos e Moderadores
local DONOS = {
    ["Gr3g0rilsir"] = true,
    ["Itz_guiix3"] = true,
    ["BlessedTeam_BT"] = true
}

local MODS = {
    ["reze167"] = true,
}

local TEMP_MODS = {}

-- Tabela que armazenar√° os usu√°rios ativos do Blessed Hub no servidor
local BLESSED_USERS = {}

-- Fun√ß√µes de verifica√ß√£o de cargo
local function IsDono(n) return DONOS[n] == true end
local function IsMod(n) return MODS[n] == true end
local function IsTempMod(n) return TEMP_MODS[n] == true end
local function IsAutorizado(n) return IsDono(n) or IsMod(n) or IsTempMod(n) end

-- Verifica√ß√£o do tipo de usu√°rio LOCAL
local playerName = LocalPlayer.Name
local isDono = IsDono(playerName)
local isMod = IsMod(playerName)
local isTempMod = IsTempMod(playerName)
local isAutorizado = IsAutorizado(playerName)

-- Sistema de an√∫ncio e descoberta de usu√°rios Blessed
local function AnnouncePresence()
    if TextChatService.TextChannels.RBXGeneral then
        -- Envia uma mensagem invis√≠vel para outros clientes do script
        TextChatService.TextChannels.RBXGeneral:SendAsync("!BLESSED_USER_JOINED_" .. LocalPlayer.Name)
    end
end

-- Listener para receber an√∫ncios de outros usu√°rios
TextChatService.OnIncomingMessage = function(message)
    local msgText = message.Text
    local speaker = Players:GetPlayerByUserId(message.TextSource.UserId)

    -- Verifica se a mensagem √© um an√∫ncio de usu√°rio Blessed
    if msgText:sub(1, 21) == "!BLESSED_USER_JOINED_" then
        local joiningPlayerName = msgText:sub(22)
        local player = Players:FindFirstChild(joiningPlayerName)
        if player and player ~= LocalPlayer then
            BLESSED_USERS[player.Name] = true
            if isAutorizado then -- Notifica apenas admins sobre novos usu√°rios
                notify("Blessed Hub", player.Name .. " √© um usu√°rio Blessed.", 2)
            end
        end
    end
    
    -- Listener de mensagens $$$ para executar comandos localmente (se for admin)
    if isAutorizado and msgText:sub(1,3) == "/" then
        local args = string.split(msgText," ")
        local command = args[1]:sub(4):lower()
        local target = args[2]

        if command == "kick" then Kick(target) end
        if command == "kill" then Kill(target) end
        if command == "killplus" then KillPlus(target) end
        if command == "fling" then Fling(target) end
        if command == "freeze" then Freeze(target) end
        if command == "verifique" then Verifique() end
        if command == "timeoutroblox" then TimeoutRoblox() end
    end
end

-- Remove o usu√°rio da lista quando ele sai do servidor
Players.PlayerRemoving:Connect(function(player)
    if BLESSED_USERS[player.Name] then
        BLESSED_USERS[player.Name] = nil
        if isAutorizado then
            notify("Blessed Hub", player.Name .. " (usu√°rio Blessed) saiu do servidor.", 2)
        end
    end
end)

-- Anuncia a presen√ßa ap√≥s um pequeno delay para garantir que o listener est√° ativo
task.delay(3, AnnouncePresence)

-- =====================================================
-- 2. FUN√á√ïES PRINCIPAIS (L√ìGICA DO SCRIPT)
-- =====================================================

-- Fun√ß√£o para notificar o usu√°rio
local function notify(title, content, duration)
    pcall(function()
        StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = "[Blessed Hub] " .. title .. ": " .. content;
            Color = Color3.fromRGB(255, 100, 0);
            Font = Enum.Font.SourceSansBold;
            FontSize = Enum.FontSize.Size24;
        })
    end)
end

-- Fun√ß√£o para obter data e hora
local function GetDateTime()
    local now = os.date("*t")
    return string.format("%02d/%02d/%04d - %02d:%02d:%02d", now.day, now.month, now.year, now.hour, now.min, now.sec)
end

-- Fun√ß√£o para encontrar jogador pelo nome
local function GetPlayerByName(query)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name:lower():sub(1, #query) == query:lower() or  
           player.DisplayName:lower():sub(1, #query) == query:lower() then
            return player
        end
    end
    return nil
end

-- Fun√ß√£o para obter o Humanoid
local function getHumanoid()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return character:WaitForChild("Humanoid")
end

-- Fun√ß√£o para copiar skin de um jogador
local function CopyPlayerSkin(player)
    if player and player.Character and player.Character:FindFirstChild("Humanoid") then
        local humanoidDescription = player.Character.Humanoid.HumanoidDescription
        local args = {
            [1] = humanoidDescription,
            [2] = true
        }
        
        local event = nil
        if ReplicatedStorage:FindFirstChild("Events") then
            event = ReplicatedStorage.Events:FindFirstChild("TryBuy")
            if event then
                event = event:FindFirstChild("Try")
            end
        end
        
        if event then
            event:FireServer(unpack(args))
            notify("Sucesso", "Skin copiada de: " .. player.Name, 3)
        else
            notify("Erro", "Evento de compra de skin n√£o encontrado", 3)
        end
    end
end

-- Fun√ß√£o para obter IDs de itens equipados
local function GetEquippedSkinIDs()
    local equippedIDs = {}
    local character = LocalPlayer.Character
    if not character then return equippedIDs end

    for _, item in ipairs(character:GetChildren()) do
        if item:IsA("Accessory") and item:FindFirstChild("Handle") then
            local handle = item.Handle
            local mesh = handle:FindFirstChildOfClass("SpecialMesh") or handle:FindFirstChildOfClass("Mesh")
            if mesh and mesh.MeshId and mesh.MeshId ~= "" then
                local accessoryId = mesh.MeshId:match("%d+")
                table.insert(equippedIDs, "Acess√≥rio: " .. (accessoryId or "Sem ID") .. " (" .. item.Name .. ")")
            else
                table.insert(equippedIDs, "Acess√≥rio (Sem ID): " .. item.Name)
            end
        end
    end

    local shirt = character:FindFirstChildOfClass("Shirt")
    if shirt and shirt.ShirtTemplate and shirt.ShirtTemplate ~= "" then
        table.insert(equippedIDs, "Roupa (Camisa): " .. shirt.ShirtTemplate)
    end

    local pants = character:FindFirstChildOfClass("Pants")
    if pants and pants.PantsTemplate and pants.PantsTemplate ~= "" then
        table.insert(equippedIDs, "Roupa (Cal√ßa): " .. pants.PantsTemplate)
    end

    return equippedIDs
end

-- Fun√ß√£o para resetar skin
local function ResetSkin()
    local event = nil
    if ReplicatedStorage:FindFirstChild("Events") then
        event = ReplicatedStorage.Events:FindFirstChild("Refresh")
    end
    
    if event then
        event:FireServer()
        notify("Sucesso", "Skin reiniciada", 3)
    else
        notify("Erro", "Evento de refresh n√£o encontrado", 3)
    end
end

-- Fun√ß√£o para teleportar para um jogador
local function TeleportToPlayer(targetPlayer)
    local myCharacter = LocalPlayer.Character
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and myCharacter and myCharacter:FindFirstChild("HumanoidRootPart") then
        myCharacter.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
        notify("Teleportado", "Voc√™ foi teleportado para: " .. targetPlayer.Name, 5)
    else
        notify("Erro", "N√£o foi poss√≠vel teleportar.", 5)
    end
end

-- Fun√ß√£o para tocar m√∫sica
local currentSound = nil
local function playMusic(songID)
    if currentSound then
        currentSound:Destroy()
        currentSound = nil
    end
    currentSound = Instance.new("Sound")
    currentSound.Parent = game.Workspace
    currentSound.SoundId = "rbxassetid://" .. songID
    currentSound.Volume = 0.5
    currentSound.Looped = false
    currentSound:Play()
    notify("M√∫sica", "Tocando m√∫sica ID: " .. songID, 3)
end

-- Fun√ß√£o para parar m√∫sica
local function stopMusic()
    if currentSound then
        currentSound:Stop()
        currentSound:Destroy()
        currentSound = nil
        notify("M√∫sica Parada", "A m√∫sica foi parada.", 2)
    end
end

-- Fun√ß√£o para aplicar tag a mensagem
local SelectedTag = nil
local function ApplyTagToMessage(message)
    local properties = Instance.new("TextChatMessageProperties")
    if SelectedTag then
        properties.PrefixText = "<font color='#ff8400'>" .. SelectedTag .. "</font> " .. message.PrefixText
    else
        properties.PrefixText = message.PrefixText
    end
    return properties
end

-- Fun√ß√£o para obter item
local function getItem(itemName, assetId)
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    if backpack then
        local success, item = pcall(function()
            return game:GetObjects("rbxassetid://" .. assetId)[1]
        end)
        if success and item then
            item.Parent = backpack
            item.Name = itemName
            notify("Item Obtido", "Voc√™ pegou " .. itemName .. "!", 3)
        else
            notify("Erro", "Este modelo pode estar indispon√≠vel: " .. itemName, 3)
        end
    else
        notify("Erro", "N√£o foi poss√≠vel pegar " .. itemName .. ".", 3)
    end
end

-- Fun√ß√£o para equipar skin de sapo
local function EquipSkinSapo()
    local args = {
        [1] = {
            ["WalkAnimation"] = 0, ["Accessories"] = {}, ["RightLegColor"] = nil, ["MoodAnimation"] = 14618207727,
            ["LeftLegColor"] = nil, ["JumpAnimation"] = 0, ["ProportionScale"] = 0, ["BodyTypeScale"] = 1,
            ["ClimbAnimation"] = 0, ["LeftArmColor"] = nil, ["Face"] = 0, ["Pants"] = 0, ["RightArmColor"] = nil,
            ["DepthScale"] = 1, ["WidthScale"] = 1, ["SwimAnimation"] = 0, ["RightArm"] = 17898082257,
            ["GraphicTShirt"] = 0, ["Head"] = 17898084158, ["Shirt"] = 0, ["RightLeg"] = 17898082268,
            ["RunAnimation"] = 0, ["Torso"] = 17898081687, ["FallAnimation"] = 0, ["TorsoColor"] = nil,
            ["IdleAnimation"] = 0, ["LeftArm"] = 17898082237, ["HeadScale"] = 1, ["HeightScale"] = 1,
            ["HeadColor"] = nil, ["LeftLeg"] = 17898081542
        }
    }
    
    local success = pcall(function()
        local event = ReplicatedStorage:WaitForChild("BloxbizRemotes"):WaitForChild("CatalogOnApplyOutfit")
        if event then
            event:FireServer(unpack(args))
            notify("Skin Equipada", "A skin 'Skin de sapo' foi equipada.", 5)
        else
            notify("Erro", "Evento de aplica√ß√£o de skin n√£o encontrado", 3)
        end
    end)
    
    if not success then
        notify("Erro", "Falha ao equipar skin de sapo", 3)
    end
end

-- Fun√ß√£o para equipar skin de capivara
local function EquipSkinCapivara()
    local args = {
        [1] = {
            ["WalkAnimation"] = 0, ["Accessories"] = {}, ["RightLegColor"] = nil, ["MoodAnimation"] = 14618207727,
            ["LeftLegColor"] = nil, ["JumpAnimation"] = 0, ["ProportionScale"] = 0, ["BodyTypeScale"] = 1,
            ["ClimbAnimation"] = 0, ["LeftArmColor"] = nil, ["Face"] = 0, ["Pants"] = 0, ["RightArmColor"] = nil,
            ["DepthScale"] = 1, ["WidthScale"] = 1, ["SwimAnimation"] = 0, ["RightArm"] = 131681603005543,
            ["GraphicTShirt"] = 0, ["Head"] = 109137349673343, ["Shirt"] = 0, ["RightLeg"] = 98454038846291,
            ["RunAnimation"] = 0, ["Torso"] = 129341990941517, ["FallAnimation"] = 0, ["TorsoColor"] = nil,
            ["IdleAnimation"] = 0, ["LeftArm"] = 107032747230578, ["HeadScale"] = 1, ["HeightScale"] = 1,
            ["HeadColor"] = nil, ["LeftLeg"] = 93110795723782
        }
    }
    
    local success = pcall(function()
        local event = ReplicatedStorage:WaitForChild("BloxbizRemotes"):WaitForChild("CatalogOnApplyOutfit")
        if event then
            event:FireServer(unpack(args))
            notify("Skin Equipada", "A skin 'Skin de capivara' foi equipada.", 5)
        else
            notify("Erro", "Evento de aplica√ß√£o de skin n√£o encontrado", 3)
        end
    end)
    
    if not success then
        notify("Erro", "Falha ao equipar skin de capivara", 3)
    end
end

-- Fun√ß√£o para ativar modo Fly
local noclip = false
getgenv().flySpeed = 1
local function flymode(speeds, value)
    getgenv().flyModeSpeed = speeds or getgenv().flySpeed
    if value == nil then
        if getgenv().isFlyActive == nil then getgenv().isFlyActive = false end
        getgenv().isFlyActive = not getgenv().isFlyActive
    else
        getgenv().isFlyActive = value
    end

    local chr = LocalPlayer.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    local function enableAllStates()
        for _, s in ipairs(Enum.HumanoidStateType:GetEnumItems()) do
            pcall(function() hum:SetStateEnabled(s, true) end)
        end
    end
    local function disableAllStates()
        for _, s in ipairs(Enum.HumanoidStateType:GetEnumItems()) do
            pcall(function() hum:SetStateEnabled(s, false) end)
        end
    end

    if not getgenv().isFlyActive then
        enableAllStates()
        hum:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
        if chr:FindFirstChild("FlyBG") then chr.FlyBG:Destroy() end
        if chr:FindFirstChild("FlyBV") then chr.FlyBV:Destroy() end
        hum.PlatformStand = false
        if chr:FindFirstChild("Animate") then chr.Animate.Disabled = false end
        getgenv().tpwalking = false
        return
    end

    for i = 1, getgenv().flyModeSpeed do
        task.spawn(function()
            local hb = game:GetService("RunService").Heartbeat
            getgenv().tpwalking = true
            while getgenv().tpwalking and hb:Wait() and chr and hum and hum.Parent do
                if hum.MoveDirection.Magnitude > 0 then
                    chr:TranslateBy(hum.MoveDirection)
                end
            end
        end)
    end

    chr.Animate.Disabled = true
    for _, track in ipairs(hum:GetPlayingAnimationTracks()) do
        track:AdjustSpeed(0)
    end
    disableAllStates()
    hum:ChangeState(Enum.HumanoidStateType.Swimming)

    local rigType = hum.RigType
    local torso = (rigType == Enum.HumanoidRigType.R6 and chr:FindFirstChild("Torso")) or chr:FindFirstChild("UpperTorso")
    if not torso then return end

    local bg = Instance.new("BodyGyro", torso)
    bg.Name = "FlyBG"
    bg.P = 9e4
    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.cframe = torso.CFrame

    local bv = Instance.new("BodyVelocity", torso)
    bv.Name = "FlyBV"
    bv.velocity = Vector3.new(0, 0.1, 0)
    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
    getgenv().currentFlyBodyVelocity = bv
    LocalPlayer.Character.Humanoid.PlatformStand = true

    task.spawn(function()
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local speed = 0
        local maxspeed = getgenv().flySpeed * 50

        while getgenv().isFlyActive and hum.Health > 0 do
            task.wait()
            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed + 0.5 + (speed / maxspeed)
                if speed > maxspeed then speed = maxspeed end
            elseif speed > 0 then
                speed = speed - 1
                if speed < 0 then speed = 0 end
            end
            local cam = workspace.CurrentCamera
            if ctrl.f + ctrl.b ~= 0 or ctrl.l + ctrl.r ~= 0 then
                bv.velocity = ((cam.CFrame.LookVector * (ctrl.f + ctrl.b))
                    + ((cam.CFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * 0.2, 0)).Position
                    - cam.CFrame.Position)) * speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif speed ~= 0 then
                bv.velocity = ((cam.CFrame.LookVector * (lastctrl.f + lastctrl.b))
                    + ((cam.CFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * 0.2, 0)).Position
                    - cam.CFrame.Position)) * speed
            else
                bv.velocity = Vector3.new(0, 0, 0)
            end
            bg.CFrame = cam.CFrame * CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
        end
        if bg then bg:Destroy() end
        if bv then bv:Destroy() end
        LocalPlayer.Character.Humanoid.PlatformStand = false
        if LocalPlayer.Character:FindFirstChild("Animate") then
            LocalPlayer.Character.Animate.Disabled = false
        end
        getgenv().tpwalking = false
    end)
end

-- Sistema de Shaders
local function applyShaders()
    local model = workspace:FindFirstChild("Model") 
    local sound = Instance.new("Sound") 
    sound.SoundId = "rbxassetid://131644923" 
    sound.Volume = 1 
    sound.Parent = SoundService 
    sound:Play() 
    
    if model then 
        local function setMat(obj) 
            for _, c in pairs(obj:GetChildren()) do 
                if c:IsA("BasePart") then c.Material = Enum.Material.Basalt 
                elseif c:IsA("Model") or c:IsA("Folder") then setMat(c) end 
            end 
        end 
        if model:FindFirstChild("001_SnowStreet") then setMat(model["001_SnowStreet"]) end 
        if model:FindFirstChild("Street") then 
            for _, o in pairs(model.Street:GetDescendants()) do if o:IsA("BasePart") then o.Material = Enum.Material.Basalt end end 
        end 
        for _, o in pairs(model:GetChildren()) do 
            if o:IsA("BasePart") and (o.Name == "Sidewalk" or o.Name == "Wedge") and o.Material == Enum.Material.SmoothPlastic then 
                o.Material = Enum.Material.Cobblestone 
            end 
        end 
        model.ChildAdded:Connect(function(obj) 
            if obj:IsA("BasePart") and (obj.Name == "Sidewalk" or obj.Name == "Wedge") and obj.Material == Enum.Material.SmoothPlastic then 
                obj.Material = Enum.Material.Cobblestone 
            end 
        end) 
    end 
    
    Lighting.Brightness = 2 
    Lighting.GlobalShadows = true 
    Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70) 
    Lighting.FogColor = Color3.fromRGB(120, 130, 140) 
    Lighting.FogStart = 80 
    Lighting.FogEnd = 600 
    Lighting.EnvironmentSpecularScale = 1 
    Lighting.EnvironmentDiffuseScale = 0.5 
    local sky = Instance.new("Sky") 
    sky.SkyboxBk = "rbxassetid://159454299" 
    sky.SkyboxDn = "rbxassetid://159454296" 
    sky.SkyboxFt = "rbxassetid://159454293" 
    sky.SkyboxLf = "rbxassetid://159454286" 
    sky.SkyboxRt = "rbxassetid://159454300" 
    sky.SkyboxUp = "rbxassetid://159454304" 
    sky.Parent = Lighting 
    local color = Instance.new("ColorCorrectionEffect", Lighting) 
    color.Brightness = 0.03 
    color.Contrast = 0.15 
    color.Saturation = 0.05 
    color.TintColor = Color3.fromRGB(255, 240, 220) 
    local bloom = Instance.new("BloomEffect", Lighting) 
    bloom.Intensity = 0.8 
    bloom.Size = 56 
    bloom.Threshold = 0.9 
    local sunRays = Instance.new("SunRaysEffect", Lighting) 
    sunRays.Intensity = 0.05 
    sunRays.Spread = 0.8 
    local blur = Instance.new("BlurEffect", Lighting) 
    blur.Size = 0 
end

-- =====================================================
-- 3. SISTEMA DE COMANDOS DE ADMIN (VIA CHAT)
-- =====================================================

-- Fun√ß√£o para encontrar jogador por nome ou display name
local function FindPlayer(name)
    name = name:lower()
    for _, p in ipairs(Players:GetPlayers()) do
        if p.Name:lower():sub(1, #name) == name:lower() or p.DisplayName:lower():sub(1, #name) == name:lower() then
            return p
        end
    end
    return nil
end

-- Comandos locais (s√≥ afetam o pr√≥prio client)
local function Kick(playerName)
    if playerName == LocalPlayer.Name then
        LocalPlayer:Kick("Voc√™ foi removido pelo Blessed Hub.")
    end
end

local function Kill(playerName)
    if playerName == LocalPlayer.Name then
        local char = LocalPlayer.Character
        if char then char:BreakJoints() end
    end
end

local function KillPlus(playerName)
    if playerName == LocalPlayer.Name then
        local char = LocalPlayer.Character
        if char then
            char:BreakJoints()
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                for i = 1, 10 do
                    local part = Instance.new("Part")
                    part.Size = Vector3.new(10,10,10)
                    part.Anchored = false
                    part.CanCollide = false
                    part.Material = Enum.Material.Neon
                    part.BrickColor = BrickColor.Random()
                    part.CFrame = root.CFrame
                    part.Parent = workspace
                    local bv = Instance.new("BodyVelocity")
                    bv.Velocity = Vector3.new(math.random(-50,50), math.random(20,80), math.random(-50,50))
                    bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
                    bv.Parent = part
                    game.Debris:AddItem(part, 3)
                end
            end
        end
    end
end

local function Fling(playerName)
    if playerName == LocalPlayer.Name then
        local char = LocalPlayer.Character
        if char then
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                local targetCFrame = CFrame.new(50000,5000000,3972823)
                local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear)
                local tween = TweenService:Create(root, tweenInfo, {CFrame = targetCFrame})
                tween:Play()
            end
        end
    end
end

local function Freeze(playerName)
    if playerName == LocalPlayer.Name then
        local char = LocalPlayer.Character
        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = true
                end
            end
        end
    end
end

local function Verifique()
    local channel = TextChatService.TextChannels.RBXGeneral
    if channel then
        local randomNumber = math.random(1000,9999)
        local msg = "Blessed_"..randomNumber
        channel:SendAsync(msg)
    end
end

local function TimeoutRoblox()
    spawn(function()
        local channel = TextChatService.TextChannels.RBXGeneral
        while true do
            if channel then
                channel:SendAsync("##########")
            end
            task.wait(0)
        end
    end)
end

-- Fun√ß√£o de comando para trazer jogador (NOVO)
local function BringPlayer(playerName)
    local target = FindPlayer(playerName)
    if not target then
        notify("Erro", "Jogador n√£o encontrado.", 3)
        return
    end

    -- Verifica se o alvo √© um usu√°rio Blessed
    if not BLESSED_USERS[target.Name] then
        notify("Erro", "Este jogador n√£o √© um usu√°rio Blessed.", 3)
        return
    end

    local myChar = LocalPlayer.Character
    if target and target.Character and myChar then
        local tHRP = target.Character:FindFirstChild("HumanoidRootPart")
        local myHRP = myChar:FindFirstChild("HumanoidRootPart")
        if tHRP and myHRP then
            tHRP.CFrame = myHRP.CFrame * CFrame.new(0, 0, 2) -- Offset para n√£o ficar preso
            notify("Sucesso", "Voc√™ puxou " .. target.Name .. " at√© voc√™.", 3)
        end
    end
end

-- Vari√°veis para comandos de admin
local ColorChangeActive = false
local savedSpawn = nil
local spawnEnabled = false
local loopResetActive = false
local loopResetThread = nil

-- Fun√ß√µes de suporte para comandos de admin
local function SetSpeed(val)
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = tonumber(val) or 16
        notify("Blessed Hub", "Velocidade: " .. hum.WalkSpeed, 3)
    end
end

local function SetJumpHeight(val)
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.JumpHeight = tonumber(val) or 10
        notify("Blessed Hub", "Pulo: " .. hum.JumpHeight, 3)
    end
end

local function ResetCharacter()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") and char:FindFirstChild("HumanoidRootPart") then
        local pos = char.HumanoidRootPart.Position
        LocalPlayer.CharacterAdded:Once(function(newChar)
            newChar:WaitForChild("HumanoidRootPart")
            repeat task.wait() until newChar:FindFirstChild("Humanoid") and newChar.Humanoid.Health > 0
            task.wait(0.1)
            newChar.HumanoidRootPart.CFrame = CFrame.new(pos)
        end)
        char.Humanoid.Health = 0
    else
        notify("Blessed Hub", "Erro ao resetar personagem.", 3)
    end
end

local function StartColorChange()
    task.spawn(function()
        while ColorChangeActive do
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                local newColor = Color3.new(math.random(), math.random(), math.random())
                local args = {
                    [1] = {
                        ["BodyColor"] = {
                            ["HeadColor"] = newColor, ["TorsoColor"] = newColor, ["LeftArmColor"] = newColor,
                            ["RightArmColor"] = newColor, ["LeftLegColor"] = newColor, ["RightLegColor"] = newColor
                        }
                    }
                }
                ReplicatedStorage.BloxbizRemotes.CatalogOnApplyToRealHumanoid:FireServer(unpack(args))
            end
            task.wait(0.1)
        end
    end)
end

local function Rejoin()
    TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
end

local function ViewPlayer(playerName)
    local target = FindPlayer(playerName)
    if target and target.Character then
        local humanoid = target.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            workspace.CurrentCamera.CameraSubject = humanoid
            notify("Blessed Hub", "Visualizando: " .. target.Name, 3)
        end
    else
        notify("Blessed Hub", "Jogador n√£o encontrado.", 3)
    end
end

local function UnviewPlayer()
    local char = LocalPlayer.Character
    if char then
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            workspace.CurrentCamera.CameraSubject = humanoid
            notify("Blessed Hub", "Parou de visualizar outros jogadores.", 3)
        end
    end
end

local function StartLoopReset()
    if loopResetActive then return end
    loopResetActive = true
    notify("Loop Reset", "Loop de reset ativado!", 3)
    loopResetThread = task.spawn(function()
        while loopResetActive do
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.Health = 0
            end
            task.wait(0.5)
        end
    end)
end

local function StopLoopReset()
    if not loopResetActive then return end
    loopResetActive = false
    notify("Loop Reset", "Loop de reset desativado!", 3)
end

-- Lista de comandos para o ;cmds
local commandsList = {
    ";copy [jogador] - Copia a skin do jogador (apenas usu√°rios Blessed).",
    ";tp [jogador] - Teleporta at√© o jogador (apenas usu√°rios Blessed).",
    ";bring [jogador] - Puxa o jogador at√© voc√™ (apenas usu√°rios Blessed).",
    ";ws [valor] - Define velocidade.",
    ";rews - Velocidade padr√£o (16).",
    ";jp [valor] - Define pulo.",
    ";rejp - Pulo padr√£o (10).",
    ";re - Reseta skin.",
    ";reset - Reinicia personagem no local da morte.",
    ";autocolor_on - Cor autom√°tica ativada.",
    ";autocolor_off - Cor autom√°tica desativada.",
    ";rejoin - Reentra no servidor.",
    ";view [jogador] - Visualiza jogador.",
    ";unview - Para de visualizar.",
    ";spawn - Salva posi√ß√£o atual como spawn.",
    ";remove_spawn - Remove spawn salvo.",
    ";loop-reset - Ativa loop de reset.",
    ";unloop-reset - Desativa loop de reset.",
    ";unbanvc - Reentra no Voice Chat.",
    ";cmds - Lista todos comandos."
}

-- Fun√ß√£o principal de comandos (ATIVADA AUTOMATICAMENTE)
local function handleChatCommand(message)
    local msg = message:lower()
    local args = string.split(msg, " ")
    local command = args[1]
    local param = table.concat(args, " ", 2)

    if command == ";copy" then
        local target = FindPlayer(param)
        if target and BLESSED_USERS[target.Name] then
            CopyPlayerSkin(param)
        else
            notify("Erro", "Jogador n√£o encontrado ou n√£o √© um usu√°rio Blessed.", 3)
        end
    elseif command == ";tp" then
        local target = FindPlayer(param)
        if target and BLESSED_USERS[target.Name] then
            TeleportToPlayer(param)
        else
            notify("Erro", "Jogador n√£o encontrado ou n√£o √© um usu√°rio Blessed.", 3)
        end
    elseif command == ";bring" then -- NOVO COMANDO
        BringPlayer(param)
    elseif command == ";ws" then SetSpeed(param)
    elseif command == ";rews" then SetSpeed(16)
    elseif command == ";jp" then SetJumpHeight(param)
    elseif command == ";rejp" then SetJumpHeight(10)
    elseif command == ";re" then ResetSkin()
    elseif command == ";reset" then ResetCharacter()
    elseif command == ";autocolor_on" then if not ColorChangeActive then ColorChangeActive = true StartColorChange() notify("Blessed Hub", "Cor autom√°tica ativada.", 3) end
    elseif command == ";autocolor_off" then ColorChangeActive = false notify("Blessed Hub", "Cor autom√°tica desativada.", 3)
    elseif command == ";rejoin" then notify("Blessed Hub", "Reentrando no servidor...", 3) Rejoin()
    elseif command == ";view" then ViewPlayer(param)
    elseif command == ";unview" then UnviewPlayer()
    elseif command == ";spawn" then
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            savedSpawn = LocalPlayer.Character.HumanoidRootPart.CFrame
            spawnEnabled = true
            notify("Spawn", "Spawn salvo com sucesso!", 3)
        end
    elseif command == ";remove_spawn" then
        savedSpawn = nil
        spawnEnabled = false
        notify("Spawn", "Spawn removido com sucesso!", 3)
    elseif command == ";loop-reset" then StartLoopReset()
    elseif command == ";unloop-reset" then StopLoopReset()
    elseif command == ";unbanvc" then
        local success, err = pcall(function() return VoiceChatService:JoinVoice() end)
        if success then notify("Blessed Hub", "Voc√™ entrou no Voice Chat!", 3)
        else notify("Blessed Hub", "Erro ao entrar no Voice Chat: " .. tostring(err), 3)
        end
    elseif command == ";cmds" then
        notify("Comandos Dispon√≠veis", table.concat(commandsList, "\n"), 15)
    end
end

-- Conecta o listener de chat assim que o script √© executado (se for autorizado)
if isAutorizado then
    LocalPlayer.Chatted:Connect(handleChatCommand)
end

-- =====================================================
-- 4. CRIA√á√ÉO DA INTERFACE (JANELA, ABAS E ELEMENTOS)
-- =====================================================

-- Carregamento da biblioteca WindUI
local WindUI
local success, result = pcall(function()
    return require("./src/init")
end)

if not success then
    success, result = pcall(function()
        return loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
    end)
end

if not success then
    warn("Erro ao carregar WindUI: " .. tostring(result))
    return
end

WindUI = result

-- Vari√°veis de Estado Globais
local SelectedPlayer = nil
local AutoEquipSkins = false
local SavedSkinName = ""
local savedSkins = {}
local respawnAtDeathPosition = false
local jobId = nil

-- IDs e Constantes
local soundId = "rbxassetid://1836973601"

-- Cria√ß√£o da interface
local Window
local success, err = pcall(function()
    Window = WindUI:CreateWindow({
        Title = "Blessed Hub | " .. (isDono and "Dono" or isMod and "Moderador" or "Usu√°rio"),
        Icon = "crown",
        Author = "Gab Scripts",
        Folder = "CloudHub",
        Size = UDim2.fromOffset(580, 460),
        Transparent = true,
        Theme = "Dark",
        SideBarWidth = 200,
        Background = "rbxassetid://137028743511937",
        HasOutline = false,
        KeySystem = { 
            Key = { "1234", "5678" },
            Note = "The Key is '1234' or '5678'",
            Thumbnail = { Image = "rbxassetid://110674298351147", Title = "Blessed Hub" },
            URL = "https://github.com/Footagesus/WindUI",
            SaveKey = true,
        },
        OpenButton = {
            Title = "Abrir Blessed Hub",
            CornerRadius = UDim.new(0,10),
            StrokeThickness = 2,
            Color = ColorSequence.new(Color3.fromHex("FF0F7B"), Color3.fromHex("F89B29")),
            Enabled = true,
            Draggable = true,
        }
    })
end)

if not success then
    warn("Erro ao criar janela: " .. tostring(err))
    notify("Erro", "N√£o foi poss√≠vel criar a interface: " .. tostring(err), 5)
    return
end

-- Cria√ß√£o das abas
local CreditTab = Window:Tab({ Title = "Creditos", Icon = "info" })
local MainTab = Window:Tab({ Title = "Inicio", Icon = "house" })
local PlayerTab = Window:Tab({ Title = "Player", Icon = "user" })
local PersonagemTab = Window:Tab({ Title = "Personagem", Icon = "footprints" })
local SkinTab = Window:Tab({ Title = "Skins Salvas", Icon = "shirt" })
local StalkTab = Window:Tab({ Title = "Stalk", Icon = "eye" })
local TeleportTab = Window:Tab({ Title = "Teleportes", Icon = "map-pin" })
local TrollTab = Window:Tab({ Title = "Troll", Icon = "skull" })
local BypassTab = Window:Tab({ Title = "Bypass", Icon = "cpu" })
local MusicTab = Window:Tab({ Title = "Musica", Icon = "music" })
local ParceirosTab = Window:Tab({ Title = "Parceiros", Icon = "users" })
local TagTab = Window:Tab({ Title = "Tags", Icon = "tag" })
local ItemTab = Window:Tab({ Title = "Item", Icon = "backpack" })
local WindowTab = Window:Tab({ Title = "Settings", Icon = "settings" })
local ExtraTab = Window:Tab({ Title = "Extras", Icon = "grid" })
-- Aba de Admin (apenas para donos e moderadores)
local AdminTab
if isAutorizado then
    AdminTab = Window:Tab({ Title = "Admin", Icon = "hammer" })
end

Window:SelectTab(1)

-- Conte√∫do das Abas (mantido do c√≥digo original para n√£o ficar extenso demais)
-- [Creditos Tab]
CreditTab:Section({ Title = "Bem-vindo ao Blessed Hub, " .. LocalPlayer.DisplayName .. "!", TextSize = 20 })
CreditTab:Section({ Title = "Seu status: " .. (isDono and "Dono" or isMod and "Moderador" or "Usu√°rio"), TextSize = 18 })
local TimeSection = CreditTab:Section({ Title = "Data e Hora", TextSize = 18 })
task.spawn(function()
    while true do
        TimeSection:SetTitle("Data e Hora: " .. GetDateTime())
        wait(1)
    end
end)
CreditTab:Button({ Title = "Copiar Link do Canal YouTube", Callback = function() 
    setclipboard("https://youtube.com/@ghzinn077?si=8YTQJcw95ww43ISC")
    notify("Sucesso!", "Link do canal copiado.", 3) 
end})
CreditTab:Button({ Title = "Copiar Link do Servidor Discord", Callback = function() 
    setclipboard("https://dsc.gg/blessed-scripts")
    notify("Sucesso!", "Link do discord copiado.", 3) 
end})
CreditTab:Code({ Title = "Creditos do script", Code = [[Esse script foi feito com muito carinho pela equipe Blessed Team ‚ù§Ô∏è. Muito obrigado por usar o Blessed Hub üòä
Desenvolvedores: Gab Scripts, Robson e Mystic
Helpers: Kauan e Anna]] })

-- [Main Tab]
local playerCountLabel = MainTab:Section({ Title = "Jogadores No Servidor: " .. #Players:GetPlayers(), TextXAlignment = "Center" })
local function updatePlayerCount() 
    playerCountLabel:SetTitle("Jogadores No Servidor: " .. #Players:GetPlayers()) 
end
Players.PlayerAdded:Connect(updatePlayerCount)
Players.PlayerRemoving:Connect(updatePlayerCount)
MainTab:Input({ Title = "Selecionar Jogador", PlaceholderText = "Digite as iniciais...", Callback = function(value) 
    SelectedPlayer = GetPlayerByName(value)
    if SelectedPlayer then
        notify("Jogador Selecionado", "Voc√™ selecionou: " .. SelectedPlayer.Name, 3)
    else
        notify("Erro", "Jogador n√£o encontrado.", 3)
    end
end})
MainTab:Toggle({ Title = "Visualizar Jogador", Value = false, Callback = function(state)
    if SelectedPlayer and SelectedPlayer.Character and SelectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        Workspace.CurrentCamera.CameraSubject = state and SelectedPlayer.Character.Humanoid or LocalPlayer.Character.Humanoid
    else 
        notify("Erro", "Nenhum jogador v√°lido selecionado.", 5) 
    end
end})
MainTab:Button({ Title = "Copiar Skin", Callback = function()
    if SelectedPlayer then 
        CopyPlayerSkin(SelectedPlayer) 
    else 
        notify("Erro", "Nenhum jogador v√°lido selecionado.", 5) 
    end
end})
local copySkinConnection
MainTab:Toggle({ Title = "Copiar Skin ao Clicar", Value = false, Callback = function(state)
    local Mouse = LocalPlayer:GetMouse()
    if state then
        copySkinConnection = Mouse.Button1Down:Connect(function()
            local target = Mouse.Target
            if target and target.Parent:IsA("Model") then
                local player = Players:GetPlayerFromCharacter(target.Parent)
                if player then 
                    CopyPlayerSkin(player)
                    notify("Skin Copiada", "Voc√™ copiou a skin de: " .. player.Name, 5) 
                end
            end
        end)
    else
        if copySkinConnection then 
            copySkinConnection:Disconnect()
            copySkinConnection = nil 
        end
        notify("Desativado", "Copiar Skin ao Clicar foi desativado.", 5)
    end
end})

-- [Player Tab]
PlayerTab:Slider({ Title = "Campo de Vis√£o (FOV)", Step = 1, Value = { Min = 20, Max = 120, Default = 70 }, Callback = function(value) 
    Workspace.CurrentCamera.FieldOfView = value 
end})
PlayerTab:Input({ Title = "Velocidade (Speed)", Desc = "Altera sua velocidade (16 normal)", PlaceholderText = "16", Callback = function(Text)
    local speed = tonumber(Text)
    if speed then
        local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then 
            humanoid.WalkSpeed = speed
            notify("Speed Aplicado", "Velocidade: " .. speed, 5) 
        else 
            notify("Error", "Humanoid not found!", 5) 
        end
    else 
        notify("Invalid Input", "Digite um n√∫mero v√°lido.", 5) 
    end
end})
PlayerTab:Toggle({ Title = "Sprint", Value = false, Callback = function(state)
    local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = state and 24 or 16
        notify("Sprint", state and "Ativado (Velocidade: 24)" or "Desativado (Velocidade: 16)", 5)
    else 
        notify("Erro", "Humanoid n√£o encontrado!", 5) 
    end
end})
PlayerTab:Toggle({ Title = "Modo Nado (Swim Mode)", Value = false, Callback = function(state)
    local humanoid = getHumanoid()
    if humanoid then
        if state then
            Workspace.Gravity = 0
            for _, stateType in pairs(Enum.HumanoidStateType:GetEnumItems()) do 
                humanoid:SetStateEnabled(stateType, false) 
            end
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming, true)
            humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
            notify("Swim Mode Ativado", "Agora voc√™ est√° nadando!", 5)
        else
            Workspace.Gravity = 196.2
            for _, stateType in pairs(Enum.HumanoidStateType:GetEnumItems()) do 
                humanoid:SetStateEnabled(stateType, true) 
            end
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming, false)
            humanoid:ChangeState(Enum.HumanoidStateType.Running)
            notify("Swim Mode Desativado", "Modo de nado desativado.", 5)
        end
    else 
        notify("Erro", "Humanoid n√£o encontrado!", 5) 
    end
end})
PlayerTab:Toggle({ Title = "Noclip", Value = false, Callback = function(state)
    noclip = state
    notify("Noclip", state and "Ativado" or "Desativado", 5)
end})
-- üü© Servi√ßos
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local speaker = Players.LocalPlayer

-- Valor padr√£o de velocidade do Fly
getgenv().flySpeed = 1

-- üü¶ Fun√ß√£o Fly
local function flymode(speeds, value)
    getgenv().flyModeSpeed = speeds or getgenv().flySpeed
    if value == nil then
        if getgenv().isFlyActive == nil then getgenv().isFlyActive = false end
        getgenv().isFlyActive = not getgenv().isFlyActive
    else
        getgenv().isFlyActive = value
    end

    local chr = speaker.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    local function enableAllStates()
        for _, s in ipairs(Enum.HumanoidStateType:GetEnumItems()) do
            pcall(function() hum:SetStateEnabled(s, true) end)
        end
    end
    local function disableAllStates()
        for _, s in ipairs(Enum.HumanoidStateType:GetEnumItems()) do
            pcall(function() hum:SetStateEnabled(s, false) end)
        end
    end

    if not getgenv().isFlyActive then
        enableAllStates()
        hum:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
        if chr:FindFirstChild("FlyBG") then chr.FlyBG:Destroy() end
        if chr:FindFirstChild("FlyBV") then chr.FlyBV:Destroy() end
        hum.PlatformStand = false
        if chr:FindFirstChild("Animate") then chr.Animate.Disabled = false end
        getgenv().tpwalking = false
        return
    end

    -- Ativar Fly
    for i = 1, getgenv().flyModeSpeed do
        task.spawn(function()
            local hb = game:GetService("RunService").Heartbeat
            getgenv().tpwalking = true
            while getgenv().tpwalking and hb:Wait() and chr and hum and hum.Parent do
                if hum.MoveDirection.Magnitude > 0 then
                    chr:TranslateBy(hum.MoveDirection)
                end
            end
        end)
    end

    chr.Animate.Disabled = true
    for _, track in ipairs(hum:GetPlayingAnimationTracks()) do
        track:AdjustSpeed(0)
    end
    disableAllStates()
    hum:ChangeState(Enum.HumanoidStateType.Swimming)

    local rigType = hum.RigType
    local torso = (rigType == Enum.HumanoidRigType.R6 and chr:FindFirstChild("Torso")) or chr:FindFirstChild("UpperTorso")
    if not torso then return end

    local bg = Instance.new("BodyGyro", torso)
    bg.Name = "FlyBG"
    bg.P = 9e4
    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.cframe = torso.CFrame

    local bv = Instance.new("BodyVelocity", torso)
    bv.Name = "FlyBV"
    bv.velocity = Vector3.new(0, 0.1, 0)
    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

    getgenv().currentFlyBodyVelocity = bv -- üîπ Guarda refer√™ncia para o slider atualizar

    speaker.Character.Humanoid.PlatformStand = true

    task.spawn(function()
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local speed = 0
        local maxspeed = getgenv().flySpeed * 50

        while getgenv().isFlyActive and hum.Health > 0 do
            task.wait()

            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed + 0.5 + (speed / maxspeed)
                if speed > maxspeed then speed = maxspeed end
            elseif speed > 0 then
                speed = speed - 1
                if speed < 0 then speed = 0 end
            end

            local cam = workspace.CurrentCamera
            if ctrl.f + ctrl.b ~= 0 or ctrl.l + ctrl.r ~= 0 then
                bv.velocity = ((cam.CFrame.LookVector * (ctrl.f + ctrl.b))
                    + ((cam.CFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * 0.2, 0)).Position
                    - cam.CFrame.Position)) * speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif speed ~= 0 then
                bv.velocity = ((cam.CFrame.LookVector * (lastctrl.f + lastctrl.b))
                    + ((cam.CFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * 0.2, 0)).Position
                    - cam.CFrame.Position)) * speed
            else
                bv.velocity = Vector3.new(0, 0, 0)
            end

            bg.CFrame = cam.CFrame * CFrame.Angles(
                -math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0
            )

            UserInputService.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    if input.KeyCode == Enum.KeyCode.W then ctrl.f = 1 end
                    if input.KeyCode == Enum.KeyCode.S then ctrl.b = -1 end
                    if input.KeyCode == Enum.KeyCode.A then ctrl.l = -1 end
                    if input.KeyCode == Enum.KeyCode.D then ctrl.r = 1 end
                end
            end)
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    if input.KeyCode == Enum.KeyCode.W then ctrl.f = 0 end
                    if input.KeyCode == Enum.KeyCode.S then ctrl.b = 0 end
                    if input.KeyCode == Enum.KeyCode.A then ctrl.l = 0 end
                    if input.KeyCode == Enum.KeyCode.D then ctrl.r = 0 end
                end
            end)
        end

        if bg then bg:Destroy() end
        if bv then bv:Destroy() end
        speaker.Character.Humanoid.PlatformStand = false
        if speaker.Character:FindFirstChild("Animate") then
            speaker.Character.Animate.Disabled = false
        end
        getgenv().tpwalking = false
    end)
end

-- üü¢ Toggle de Fly
PlayerTab:Toggle({
    Title = "Fly",
    Value = false,
    Callback = function(state)
        flymode(getgenv().flySpeed, state)
    end
})

-- üîµ Slider de Velocidade do Fly
PlayerTab:Slider({
Title = "Fly Speed",
Step = 1,
Value = { Min = 1, Max = 10, Default = 1 },
Callback = function(value)
getgenv().flySpeed = value
notify("Fly Speed Atualizado", "Velocidade definida para " .. value, 3)
end
})

-- [Personagem Tab]
PersonagemTab:Button({ Title = "Exibir IDs Equipados", Callback = function()
    local equippedIDs = GetEquippedSkinIDs()
    if #equippedIDs > 0 then 
        notify("Itens Equipados", table.concat(equippedIDs, "\n"), 10)
    else 
        notify("Nenhum Item Encontrado", "Nenhum acess√≥rio ou roupa foi identificado.", 10) 
    end
end})
PersonagemTab:Input({ Title = "Copiar IDs", Desc = "Digite 'sim' para copiar os IDs.", PlaceholderText = "Digite 'sim'", Finished = true, Callback = function(value)
    if value:lower() == "sim" then
        local equippedIDs = GetEquippedSkinIDs()
        if #equippedIDs > 0 then 
            setclipboard(table.concat(equippedIDs, "\n"))
            notify("IDs Copiados", "IDs copiados para a √°rea de transfer√™ncia.", 10)
        else 
            notify("Nenhum Item Encontrado", "Nenhum item para copiar.", 10) 
        end
    else 
        notify("Opera√ß√£o Cancelada", "IDs n√£o foram copiados.", 10) 
    end
end})
PersonagemTab:Toggle({ Title = "Mudar Cor do Personagem", Value = false, Callback = function(state)
    ColorChangeActive = state
    if state then
        task.spawn(function()
            while ColorChangeActive do
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    local newColor = Color3.new(math.random(), math.random(), math.random())
                    local args = { 
                        [1] = { 
                            ["BodyColor"] = { 
                                ["HeadColor"] = newColor, 
                                ["TorsoColor"] = newColor, 
                                ["LeftArmColor"] = newColor, 
                                ["RightArmColor"] = newColor, 
                                ["LeftLegColor"] = newColor, 
                                ["RightLegColor"] = newColor 
                            } 
                        } 
                    }
                    
                    local success = pcall(function()
                        local event = ReplicatedStorage:FindFirstChild("BloxbizRemotes"):FindFirstChild("CatalogOnApplyToRealHumanoid")
                        if event then
                            event:FireServer(unpack(args))
                        end
                    end)
                    
                    if not success then
                        notify("Erro", "Falha ao mudar cor do personagem", 3)
                        ColorChangeActive = false
                        break
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end})
PersonagemTab:Button({ Title = "Salvar Skin do mapa todo", Callback = function()
    savedSkins = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            table.insert(savedSkins, {player.DisplayName, player})
        end
    end
    notify("Skins Salvas", "As skins de todos os jogadores foram salvas!", 3)
end})

-- [Skin Tab]
SkinTab:Input({ Title = "Nome da Skin", PlaceholderText = "Digite o nome...", Callback = function(value) 
    SavedSkinName = value 
end})
SkinTab:Button({ Title = "Salvar Skin", Callback = function()
    if SavedSkinName ~= "" then
        local success = pcall(function()
            local event = ReplicatedStorage:FindFirstChild("AvatarEditor"):FindFirstChild("RemoteEvent")
            if event then 
                event:FireServer("create", SavedSkinName)
                notify("Sucesso", "Skin salva com sucesso!", 3)
            else
                notify("Erro", "Evento de salvamento de skin n√£o encontrado", 3)
            end
        end)
        
        if not success then
            notify("Erro", "Falha ao salvar skin", 3)
        end
    else 
        notify("Erro", "Defina um nome para salvar.", 5) 
    end
end})

SkinTab:Dropdown({ Title = "Skin de Animais", Desc = "Selecione uma skin de animal para equipar.", Multi = false, Value = nil, AllowNone = true, Values = {"Skin de sapo", "Skin de capivara"}, Callback = function(selectedSkin)
    if selectedSkin == "Skin de sapo" then 
        EquipSkinSapo()
    elseif selectedSkin == "Skin de capivara" then 
        EquipSkinCapivara()
    end
end})

-- [Stalk Tab]
StalkTab:Input({ Title = "Digite o Nome do Jogador", Desc = "Insira o nome ou display name.", PlaceholderText = "Nome do jogador", Callback = function(playerName)
    local playerFound
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():find(playerName:lower()) or player.DisplayName:lower():find(playerName:lower()) then 
            playerFound = player
            break 
        end
    end
    if playerFound then
        notify("Informa√ß√µes do Jogador", "Nome: " .. playerFound.Name .. "\nDisplay Name: " .. playerFound.DisplayName .. "\nConta criada h√°: " .. playerFound.AccountAge .. " dias", 8)
    else 
        notify("Blessed Hub", "Jogador n√£o encontrado.", 5) 
    end
end})

-- [Teleportes Tab]
TeleportTab:Input({ Title = "Selecionar Jogador", Desc = "Digite as iniciais do nome.", PlaceholderText = "Digite as iniciais...", Finished = true, Callback = function(value)
    SelectedPlayer = GetPlayerByName(value)
    if SelectedPlayer then 
        notify("Jogador Selecionado", "Agora selecionado: " .. SelectedPlayer.Name, 5)
    else 
        notify("Erro", "Jogador n√£o encontrado.", 5) 
    end
end})

TeleportTab:Button({ Title = "Teleportar para Jogador", Callback = function() 
    TeleportToPlayer(SelectedPlayer) 
end})

local clickTpConnection
TeleportTab:Toggle({ Title = "Click TP", Value = false, Callback = function(state)
    local Mouse = LocalPlayer:GetMouse()
    if state then
        clickTpConnection = Mouse.Button1Down:Connect(function()
            local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            humanoidRootPart.CFrame = CFrame.new(Mouse.Hit.p)
            notify("Teleportado", "Voc√™ foi teletransportado para a posi√ß√£o clicada.", 5)
        end)
    else
        if clickTpConnection then 
            clickTpConnection:Disconnect()
            clickTpConnection = nil 
        end
        notify("Desativado", "Click TP foi desativado.", 5)
    end
end})

TeleportTab:Button({
Title = "Centro do Mapa",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(0, 16, -1))
end
})

TeleportTab:Button({
Title = "Portal",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-1, 24, -73))
end
})

TeleportTab:Button({
Title = "Placa Robux",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-0, 15, 76))
end
})

TeleportTab:Button({
Title = "Final Mapa -01",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-18, 3, 1019))
end
})

TeleportTab:Button({
Title = "Final Mapa -02",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-1018, 3, -9))
end
})

TeleportTab:Button({
Title = "Final Mapa -03",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(1017, 3, 34))
end
})

TeleportTab:Button({
Title = "Final Mapa -04",
Callback = function()
game.Players.LocalPlayer.Character:MoveTo(Vector3.new(55, 3, -1018))
end
})

-- [Troll Tab]
-- üü© Servi√ßos
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Vari√°veis globais
local SelectedPlayer
local BangActive = false
local GetBangedActive = false
local imitarChatConnection

-- Fun√ß√£o auxiliar para pegar jogador pelo nome ou displayName
local function GetPlayerByName(name)
name = name:lower()
for _, plr in ipairs(Players:GetPlayers()) do
if plr.Name:lower():sub(1, #name) == name or plr.DisplayName:lower():sub(1, #name) == name then
return plr
end
end
return nil
end

-- üü¢ Input: Selecionar jogador
TrollTab:Input({
Title = "Selecionar Jogador",
Desc = "Digite parte do nome do jogador",
PlaceholderText = "Ex: joao",
Finished = true,
Callback = function(value)
SelectedPlayer = GetPlayerByName(value)
end
})

-- üü¢ Toggle: Visualizar jogador
TrollTab:Toggle({
Title = "Visualizar Jogador",
Value = false,
Callback = function(state)
if SelectedPlayer and SelectedPlayer.Character and SelectedPlayer.Character:FindFirstChild("Humanoid") then
game.Workspace.CurrentCamera.CameraSubject = state and SelectedPlayer.Character.Humanoid or LocalPlayer.Character.Humanoid
end
end
})

-- üü¢ Toggle: Bang Player
TrollTab:Toggle({
Title = "Bang Player",
Value = false,
Callback = function(state)
BangActive = state
if BangActive and SelectedPlayer and SelectedPlayer.Character and SelectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
local activeAnimation
if humanoid then
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://10714068222"
activeAnimation = humanoid:LoadAnimation(animation)
activeAnimation:Play()
activeAnimation:AdjustSpeed(2)
end

coroutine.wrap(function()
while BangActive and SelectedPlayer and SelectedPlayer.Character do
local targetHRP = SelectedPlayer.Character:FindFirstChild("HumanoidRootPart")
local localHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
if targetHRP and localHRP then
localHRP.CFrame = targetHRP.CFrame * CFrame.new(0, 0, 1.5)
end
task.wait(0.1)
end
if activeAnimation then activeAnimation:Stop() end
end)()
end
end
})

-- üü¢ Toggle: Get Banged
TrollTab:Toggle({
Title = "Get Banged",
Value = false,
Callback = function(state)
GetBangedActive = state
if GetBangedActive and SelectedPlayer and SelectedPlayer.Character and SelectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
local activeAnimation
if humanoid then
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://10714360343"
activeAnimation = humanoid:LoadAnimation(animation)
activeAnimation:Play()
end

coroutine.wrap(function()
while GetBangedActive and SelectedPlayer and SelectedPlayer.Character do
local targetHRP = SelectedPlayer.Character:FindFirstChild("HumanoidRootPart")
local localHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
if targetHRP and localHRP then
localHRP.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -1.5)
end
task.wait(0.1)
end
if activeAnimation then activeAnimation:Stop() end
end)()
end
end
})

-- üü¢ Dropdown: Selecionar jogador para imitar chat
local allPlayerNames = {}
for _, plr in ipairs(Players:GetPlayers()) do
table.insert(allPlayerNames, plr.DisplayName)
end

TrollTab:Dropdown({
Title = "Selecionar Jogador para Imitar Chat",
Desc = "Escolha um jogador para copiar o chat",
Multi = false,
Value = allPlayerNames[1] or nil,
AllowNone = true,
Values = allPlayerNames,
Callback = function(selected)
if selected[1] then
for _, p in ipairs(Players:GetPlayers()) do
if p.DisplayName == selected[1] then
SelectedPlayer = p
break
end
end
end
end
})

-- üü¢ Toggle: Imitar Chat
TrollTab:Toggle({
Title = "Imitar Chat",
Value = false,
Callback = function(enabled)
if enabled then
if SelectedPlayer then
imitarChatConnection = SelectedPlayer.Chatted:Connect(function(msg)
pcall(function()
game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(msg)
end)
end)
end
else
if imitarChatConnection then
imitarChatConnection:Disconnect()
end
end
end
})

TrollTab:Button({ Title = "Jerk", Desc = "Clique para iniciar a a√ß√£o.", Callback = function() 
    local success = pcall(function()
        loadstring(game:HttpGet("https://pastefy.app/YZoglOyJ/raw"))()
    end)
    
    if not success then
        notify("Erro", "Falha ao executar script de troll", 3)
    end
end })

-- [Bypass Tab]
BypassTab:Button({ Title = "Tentar Entrar no Voice Chat", Callback = function()
    local success, errorMessage = pcall(function() 
        game:GetService("VoiceChatService"):JoinVoice() 
    end)
    if success then 
        notify("Sucesso", "Voc√™ entrou no Voice Chat!", 2)
    else 
        notify("Erro", "N√£o foi poss√≠vel entrar no Voice Chat. Erro: " .. tostring(errorMessage), 2) 
    end
end})

-- [M√∫sica Tab]
local MusicInput = MusicTab:Input({ Title = "ID da M√∫sica", Placeholder = "Insira o ID aqui...", Callback = function(value) 
    MusicInput.Value = value 
end})
MusicTab:Button({ Title = "Tocar M√∫sica do Input", Callback = function()
    local songID = tonumber(MusicInput.Value)
    if songID then 
        playMusic(songID)
        notify("M√∫sica Personalizada", "Tocando ID: " .. songID, 2)
    else 
        notify("Erro", "Por favor, insira um ID v√°lido!", 2) 
    end
end})
MusicTab:Dropdown({ Title = "Funk", Multi = false, Value = nil, AllowNone = true, Values = { "Fuga na VT", "Dim Dim Dom", "Ela Sentou Gostou", "Marciin", "Se Prepara", "Papi", "Halloween", "Voando Alto", "Corpo Suado", "Spring Love", "12 Do Cinga", "Os Cria", "Maria Penha", "Me Apaixonei", "Funk House" }, Callback = function(selectedMusic)
    local songIDs = { 
        ["Fuga na VT"] = "131891110268352", 
        ["Dim Dim Dom"] = "93993692602344", 
        ["Ela Sentou Gostou"] = "81791559745283", 
        ["Marciin"] = "87789757659257", 
        ["Se Prepara"] = "98063604604756", 
        ["Papi"] = "139086778929473", 
        ["Halloween"] = "83875675100660", 
        ["Voando Alto"] = "110475831724424", 
        ["Corpo Suado"] = "130664328738685", 
        ["Spring Love"] = "102930993846348", 
        ["12 Do Cinga"] = "80112997683181", 
        ["Os Cria"] = "104498738218748", 
        ["Maria Penha"] = "125193414124436", 
        ["Me Apaixonei"] = "113456637133741", 
        ["Funk House"] = "131201909953525" 
    }
    if songIDs[selectedMusic] then 
        playMusic(songIDs[selectedMusic])
        notify("Funk Selecionado", "Tocando: " .. selectedMusic, 2)
    end
end})
MusicTab:Slider({ Title = "Volume da M√∫sica", Step = 1, Value = { Min = 0, Max = 100, Default = 20 }, Callback = function(value)
    if currentSound then 
        currentSound.Volume = value / 100
        notify("Volume Ajustado", "Volume: " .. value, 2)
    end
end})
MusicTab:Button({ Title = "Parar M√∫sica", Callback = function() 
    stopMusic() 
end})

-- [Parceiros Tab]
ParceirosTab:Input({ Title = "JobId do Servidor", Placeholder = "Cole o JobId aqui...", Callback = function(value) 
    jobId = value 
end})
ParceirosTab:Button({ Title = "Entrar no Servidor", Callback = function()
    if jobId and jobId ~= "" then 
        TeleportService:TeleportToPlaceInstance(PlaceId, jobId, LocalPlayer)
        notify("Entrando...", "Voc√™ est√° sendo teleportado!", 3)
    else 
        notify("Erro", "Digite um JobId v√°lido!", 3) 
    end
end})
ParceirosTab:Button({ Title = "Copiar Meu JobId", Callback = function()
    setclipboard(game.JobId)
    notify("Copiado!", "Seu JobId foi copiado!", 2)
end})

-- [Tags Tab]
TagTab:Dropdown({ Title = "Escolha uma tag (chat)", Multi = false, Value = nil, AllowNone = true, Values = { "[MOD]", "[BLESSED]", "[‚öíÔ∏è]" }, Callback = function(selectedTag)
    SelectedTag = selectedTag
    notify("Tag Selecionada", "Selecionado: " .. (selectedTag or "Nenhuma"), 2)
end})

-- [Item Tab]
ItemTab:Button({ Title = "Pegar Pistol Gun", Callback = function() 
    getItem("Pistol Gun", "12888018694") 
end})
ItemTab:Button({ Title = "Pegar Shotgun 2", Callback = function() 
    getItem("Shotgun 2", "178785159") 
end})
ItemTab:Button({ Title = "Pegar Uzi", Callback = function() 
    getItem("Uzi", "128105460088314") 
end})
ItemTab:Button({ Title = "Pegar M4A1", Callback = function() 
    getItem("M4A1", "10635966401") 
end})
ItemTab:Button({ Title = "Pegar Celular", Callback = function() 
    getItem("Celular", "2143355240") 
end})

-- [Admin Tab] - Apenas para donos e moderadores (SEM BOT√ïES DE DONO)
if isAutorizado and AdminTab then
    AdminTab:Section({ Title = "Comandos de Admin via Chat", TextSize = 18 })
    AdminTab:Label({ Title = "Os comandos j√° est√£o ATIVADOS.", TextSize = 14 })
    AdminTab:Label({ Title = "Digite ;cmds no chat para ver a lista.", TextSize = 14 })
    AdminTab:Button({ Title = "Ver Comandos Dispon√≠veis", Description = "Lista todos os comandos que voc√™ pode usar no chat.", Callback = function()
        notify("Comandos Dispon√≠veis", table.concat(commandsList, "\n"), 15)
    end})
end

-- [Settings/Window Tab]
WindowTab:Button({ Title = "Relogar", Desc = "Clique aqui para relogar no jogo.", Callback = function()
TeleportService:Teleport(PlaceId, Player)
end})

-- [Extras Tab]
ExtraTab:Button({ Title = "Executar Infinite Yield", Desc = "Clique para executar o script Infinite Yield.", Callback = function()
local success, err = pcall(function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)
if success then
notify("Script Executado", "Infinite Yield foi executado com sucesso.", 5)
else
notify("Erro", "Falha ao executar o script: " .. tostring(err), 5)
end
end})

-- =====================================================
-- 5. CONEX√ïES DE EVENTOS E EXECU√á√ÉO INICIAL
-- =====================================================

-- Evento para Noclip
RunService.Stepped:Connect(function()
    if noclip then
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Evento para o sistema de Tags
pcall(function()
    TextChatService.OnIncomingMessage = function(message: TextChatMessage)
        local properties = Instance.new("TextChatMessageProperties")
        if message.TextSource then
            local player = Players:GetPlayerByUserId(message.TextSource.UserId)
            if player == LocalPlayer then
                properties = ApplyTagToMessage(message)
            else
                properties.PrefixText = message.PrefixText
            end
        end
        return properties
    end
end)

-- Execu√ß√£o inicial do script
pcall(function()
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Parent = game.Workspace
    sound:Play()
    
    notify("Blessed Hub", "Script carregado com sucesso! Seu status: " .. (isDono and "Dono" or isMod and "Moderador" or "Usu√°rio"), 3)
    
    -- Aplica shaders automaticamente
    applyShaders()
end)
